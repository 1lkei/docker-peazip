name: Docker images auto build and push

on:
  schedule:
    - cron: "0 0 * * *"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Get latest release version
        run: | 
          latest_version=$(curl -s https://api.github.com/repos/peazip/PeaZip/releases/latest | jq -r .tag_name)
          echo "latest_version=$latest_version" >> $GITHUB_ENV

      - name: Check local version
        run: |
          if [ -f ./peazip_version ]; then
            local_version=$(cat ./peazip_version)
          else
            local_version="none"
          fi
          echo "local_version=$local_version" >> $GITHUB_ENV

      - name: Set up QEMU
        if: env.local_version != env.latest_version
        uses: docker/setup-qemu-action@v3.2.0

      - name: Set up Docker Buildx
        if: env.local_version != env.latest_version
        uses: docker/setup-buildx-action@v3.7.1

      - name: Login to DockerHub
        if: env.local_version != env.latest_version
        uses: docker/login-action@v3.3.0
        with:
          username: 1lkei
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker build amd64
        if: env.local_version != env.latest_version
        uses: docker/build-push-action@v6.9.0
        with:
          context: .
          file: Dockerfile.amd64
          push: false
          tags: |
            1lkei/peazip:latest-amd64
            1lkei/peazip:${{ env.latest_version }}-amd64
          build-args: |
            VERSION=${{ env.latest_version }}
          platforms: linux/amd64

      - name: Docker build arm64
        if: env.local_version != env.latest_version
        uses: docker/build-push-action@v6.9.0
        with:
          context: .
          file: Dockerfile.aarch64
          push: false
          tags: |
            1lkei/peazip:latest-arm64
            1lkei/peazip:${{ env.latest_version }}-arm64
          build-args: |
            VERSION=${{ env.latest_version }}
          platforms: linux/arm64

      - name: Create and push manifest images latest
        if: env.local_version != env.latest_version
        uses: Noelware/docker-manifest-action@0.4.2
        with:
            inputs: 1lkei/peazip:latest
            images: 1lkei/peazip:latest-amd64,1lkei/peazip:latest-arm64
            push: true

      - name: Create and push manifest images ${{ env.latest_version }}
        if: env.local_version != env.latest_version
        uses: Noelware/docker-manifest-action@0.4.2
        with:
            inputs: 1lkei/peazip:${{ env.latest_version }}
            images: 1lkei/peazip:${{ env.latest_version }}-amd64,1lkei/peazip:${{ env.latest_version }}-arm64
            push: true

      - name: Commit updated version
        if: env.local_version != env.latest_version
        run: |
          echo "$latest_version" > peazip_version
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add peazip_version
          git commit -m "Update version to $latest_version"
          git remote set-url origin https://1lkei:${{ secrets.REPO_BOT }}@github.com/1lkei/docker-peazip.git
          git push